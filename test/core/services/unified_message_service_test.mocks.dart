// Mocks generated by Mockito 5.4.5 from annotations
// in sechat_app/test/core/services/unified_message_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;
import 'package:sechat_app/core/services/se_session_service.dart' as _i5;
import 'package:sechat_app/core/services/se_socket_service.dart' as _i2;
import 'package:sechat_app/features/chat/models/chat_conversation.dart' as _i7;
import 'package:sechat_app/features/chat/models/message.dart' as _i8;
import 'package:sechat_app/features/chat/services/message_storage_service.dart'
    as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [SeSocketService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSeSocketService extends _i1.Mock implements _i2.SeSocketService {
  MockSeSocketService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set onMessageAcked(dynamic Function(String)? _onMessageAcked) =>
      super.noSuchMethod(
        Invocation.setter(
          #onMessageAcked,
          _onMessageAcked,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set onMessageReceived(
          dynamic Function(
            String,
            String,
            String,
            String,
          )? _onMessageReceived) =>
      super.noSuchMethod(
        Invocation.setter(
          #onMessageReceived,
          _onMessageReceived,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set onDelivered(
          dynamic Function(
            String,
            String,
            String,
          )? _onDelivered) =>
      super.noSuchMethod(
        Invocation.setter(
          #onDelivered,
          _onDelivered,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set onRead(
          dynamic Function(
            String,
            String,
            String,
          )? _onRead) =>
      super.noSuchMethod(
        Invocation.setter(
          #onRead,
          _onRead,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set onPresence(
          dynamic Function(
            String,
            bool,
            String,
          )? _onPresence) =>
      super.noSuchMethod(
        Invocation.setter(
          #onPresence,
          _onPresence,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set onTyping(
          dynamic Function(
            String,
            String,
            bool,
          )? _onTyping) =>
      super.noSuchMethod(
        Invocation.setter(
          #onTyping,
          _onTyping,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set onKeyExchangeRequest(
          dynamic Function(Map<String, dynamic>)? _onKeyExchangeRequest) =>
      super.noSuchMethod(
        Invocation.setter(
          #onKeyExchangeRequest,
          _onKeyExchangeRequest,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set onKeyExchangeResponse(
          dynamic Function(Map<String, dynamic>)? _onKeyExchangeResponse) =>
      super.noSuchMethod(
        Invocation.setter(
          #onKeyExchangeResponse,
          _onKeyExchangeResponse,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set onKeyExchangeRevoked(
          dynamic Function(Map<String, dynamic>)? _onKeyExchangeRevoked) =>
      super.noSuchMethod(
        Invocation.setter(
          #onKeyExchangeRevoked,
          _onKeyExchangeRevoked,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set onUserDataExchange(
          dynamic Function(Map<String, dynamic>)? _onUserDataExchange) =>
      super.noSuchMethod(
        Invocation.setter(
          #onUserDataExchange,
          _onUserDataExchange,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set onConversationCreated(
          dynamic Function(Map<String, dynamic>)? _onConversationCreated) =>
      super.noSuchMethod(
        Invocation.setter(
          #onConversationCreated,
          _onConversationCreated,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set onUserDeleted(dynamic Function(Map<String, dynamic>)? _onUserDeleted) =>
      super.noSuchMethod(
        Invocation.setter(
          #onUserDeleted,
          _onUserDeleted,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set onContactAdded(dynamic Function(Map<String, dynamic>)? _onContactAdded) =>
      super.noSuchMethod(
        Invocation.setter(
          #onContactAdded,
          _onContactAdded,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set onContactRemoved(
          dynamic Function(Map<String, dynamic>)? _onContactRemoved) =>
      super.noSuchMethod(
        Invocation.setter(
          #onContactRemoved,
          _onContactRemoved,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set onSessionRegistered(
          dynamic Function(Map<String, dynamic>)? _onSessionRegistered) =>
      super.noSuchMethod(
        Invocation.setter(
          #onSessionRegistered,
          _onSessionRegistered,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set onMessageStatusUpdateExternal(
          dynamic Function(
            String,
            String,
            String,
            String?,
            String?,
          )? _onMessageStatusUpdateExternal) =>
      super.noSuchMethod(
        Invocation.setter(
          #onMessageStatusUpdateExternal,
          _onMessageStatusUpdateExternal,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.Stream<bool> get connectionStateStream => (super.noSuchMethod(
        Invocation.getter(#connectionStateStream),
        returnValue: _i3.Stream<bool>.empty(),
      ) as _i3.Stream<bool>);

  @override
  bool get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: false,
      ) as bool);

  @override
  bool get isConnecting => (super.noSuchMethod(
        Invocation.getter(#isConnecting),
        returnValue: false,
      ) as bool);

  @override
  bool get isReadyToSend => (super.noSuchMethod(
        Invocation.getter(#isReadyToSend),
        returnValue: false,
      ) as bool);

  @override
  _i3.Future<void> connect(String? sessionId) => (super.noSuchMethod(
        Invocation.method(
          #connect,
          [sessionId],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  String getSocketStatus() => (super.noSuchMethod(
        Invocation.method(
          #getSocketStatus,
          [],
        ),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.method(
            #getSocketStatus,
            [],
          ),
        ),
      ) as String);

  @override
  void sendPresence(
    bool? isOnline,
    List<String>? toUserIds,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #sendPresence,
          [
            isOnline,
            toUserIds,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void sendTyping(
    String? recipientId,
    String? conversationId,
    bool? isTyping,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #sendTyping,
          [
            recipientId,
            conversationId,
            isTyping,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void sendMessage({
    required String? messageId,
    required String? recipientId,
    required String? body,
    String? conversationId,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #sendMessage,
          [],
          {
            #messageId: messageId,
            #recipientId: recipientId,
            #body: body,
            #conversationId: conversationId,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void sendReadReceipt(
    String? toUserId,
    String? messageId,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #sendReadReceipt,
          [
            toUserId,
            messageId,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void sendKeyExchangeRequest({
    required String? recipientId,
    required String? publicKey,
    required String? requestId,
    required String? requestPhrase,
    String? version = '1',
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #sendKeyExchangeRequest,
          [],
          {
            #recipientId: recipientId,
            #publicKey: publicKey,
            #requestId: requestId,
            #requestPhrase: requestPhrase,
            #version: version,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void sendKeyExchangeResponse({
    required String? recipientId,
    required String? publicKey,
    required String? responseId,
    String? requestVersion = '1',
    String? type = 'key_exchange_response',
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #sendKeyExchangeResponse,
          [],
          {
            #recipientId: recipientId,
            #publicKey: publicKey,
            #responseId: responseId,
            #requestVersion: requestVersion,
            #type: type,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void revokeKeyExchange({
    required String? recipientId,
    required String? requestId,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #revokeKeyExchange,
          [],
          {
            #recipientId: recipientId,
            #requestId: requestId,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void sendUserDataExchange({
    required String? recipientId,
    required String? encryptedData,
    String? conversationId,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #sendUserDataExchange,
          [],
          {
            #recipientId: recipientId,
            #encryptedData: encryptedData,
            #conversationId: conversationId,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyConversationCreated({
    required String? recipientId,
    required String? conversationIdLocal,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #notifyConversationCreated,
          [],
          {
            #recipientId: recipientId,
            #conversationIdLocal: conversationIdLocal,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyUserDeleted(List<String>? toUserIds) => super.noSuchMethod(
        Invocation.method(
          #notifyUserDeleted,
          [toUserIds],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.Future<void> disconnect() => (super.noSuchMethod(
        Invocation.method(
          #disconnect,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  void setOnMessageReceived(
          dynamic Function(
            String,
            String,
            String,
            String,
            String,
          )? callback) =>
      super.noSuchMethod(
        Invocation.method(
          #setOnMessageReceived,
          [callback],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setOnTypingIndicator(
          dynamic Function(
            String,
            bool,
          )? callback) =>
      super.noSuchMethod(
        Invocation.method(
          #setOnTypingIndicator,
          [callback],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setOnOnlineStatusUpdate(
          dynamic Function(
            String,
            bool,
            String?,
          )? callback) =>
      super.noSuchMethod(
        Invocation.method(
          #setOnOnlineStatusUpdate,
          [callback],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setOnMessageStatusUpdate(
          dynamic Function(
            String,
            String,
            String,
            String?,
            String?,
          )? callback) =>
      super.noSuchMethod(
        Invocation.method(
          #setOnMessageStatusUpdate,
          [callback],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setOnKeyExchangeRequestReceived(
          dynamic Function(Map<String, dynamic>)? callback) =>
      super.noSuchMethod(
        Invocation.method(
          #setOnKeyExchangeRequestReceived,
          [callback],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setOnKeyExchangeAccepted(
          dynamic Function(Map<String, dynamic>)? callback) =>
      super.noSuchMethod(
        Invocation.method(
          #setOnKeyExchangeAccepted,
          [callback],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setOnKeyExchangeResponse(
          dynamic Function(Map<String, dynamic>)? callback) =>
      super.noSuchMethod(
        Invocation.method(
          #setOnKeyExchangeResponse,
          [callback],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setOnKeyExchangeDeclined(
          dynamic Function(Map<String, dynamic>)? callback) =>
      super.noSuchMethod(
        Invocation.method(
          #setOnKeyExchangeDeclined,
          [callback],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setOnConversationCreated(
          dynamic Function(Map<String, dynamic>)? callback) =>
      super.noSuchMethod(
        Invocation.method(
          #setOnConversationCreated,
          [callback],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setOnUserDataExchange(
          dynamic Function(Map<String, dynamic>)? callback) =>
      super.noSuchMethod(
        Invocation.method(
          #setOnUserDataExchange,
          [callback],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setOnMessageAcked(dynamic Function(String)? callback) =>
      super.noSuchMethod(
        Invocation.method(
          #setOnMessageAcked,
          [callback],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setOnMessageDelivered(
          dynamic Function(
            String,
            String,
            String,
          )? callback) =>
      super.noSuchMethod(
        Invocation.method(
          #setOnMessageDelivered,
          [callback],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setOnMessageRead(
          dynamic Function(
            String,
            String,
            String,
          )? callback) =>
      super.noSuchMethod(
        Invocation.method(
          #setOnMessageRead,
          [callback],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setOnKeyExchangeRevoked(
          dynamic Function(Map<String, dynamic>)? callback) =>
      super.noSuchMethod(
        Invocation.method(
          #setOnKeyExchangeRevoked,
          [callback],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setOnUserDeleted(dynamic Function(Map<String, dynamic>)? callback) =>
      super.noSuchMethod(
        Invocation.method(
          #setOnUserDeleted,
          [callback],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setOnContactAdded(dynamic Function(Map<String, dynamic>)? callback) =>
      super.noSuchMethod(
        Invocation.method(
          #setOnContactAdded,
          [callback],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setOnContactRemoved(dynamic Function(Map<String, dynamic>)? callback) =>
      super.noSuchMethod(
        Invocation.method(
          #setOnContactRemoved,
          [callback],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setOnSessionRegistered(
          dynamic Function(Map<String, dynamic>)? callback) =>
      super.noSuchMethod(
        Invocation.method(
          #setOnSessionRegistered,
          [callback],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  void refreshConnectionStatus() => super.noSuchMethod(
        Invocation.method(
          #refreshConnectionStatus,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.Future<bool> testConnection() => (super.noSuchMethod(
        Invocation.method(
          #testConnection,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<void> manualConnect() => (super.noSuchMethod(
        Invocation.method(
          #manualConnect,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> emergencyReconnect() => (super.noSuchMethod(
        Invocation.method(
          #emergencyReconnect,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  void debugPrintState() => super.noSuchMethod(
        Invocation.method(
          #debugPrintState,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void checkConnectionHealth() => super.noSuchMethod(
        Invocation.method(
          #checkConnectionHealth,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void emit(
    String? event,
    Map<String, dynamic>? data,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #emit,
          [
            event,
            data,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.Future<void> deleteSessionOnServer({String? sessionId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteSessionOnServer,
          [],
          {#sessionId: sessionId},
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> sendMessageStatusUpdate({
    required String? recipientId,
    required String? messageId,
    String? status,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendMessageStatusUpdate,
          [],
          {
            #recipientId: recipientId,
            #messageId: messageId,
            #status: status,
          },
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  void on(
    String? event,
    dynamic Function(dynamic)? handler,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #on,
          [
            event,
            handler,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void off(
    String? event, [
    dynamic Function(dynamic)? handler,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #off,
          [
            event,
            handler,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, dynamic> getQueueStatistics() => (super.noSuchMethod(
        Invocation.method(
          #getQueueStatistics,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  _i3.Future<Map<String, dynamic>> checkQueueStatus() => (super.noSuchMethod(
        Invocation.method(
          #checkQueueStatus,
          [],
        ),
        returnValue:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i3.Future<Map<String, dynamic>>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.Future<void> forceDisconnect() => (super.noSuchMethod(
        Invocation.method(
          #forceDisconnect,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  Map<String, dynamic> getDetailedConnectionStatus() => (super.noSuchMethod(
        Invocation.method(
          #getDetailedConnectionStatus,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  Map<String, dynamic> getCallbackStatus() => (super.noSuchMethod(
        Invocation.method(
          #getCallbackStatus,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  _i3.Future<Map<String, dynamic>> checkConnectionQuality() =>
      (super.noSuchMethod(
        Invocation.method(
          #checkConnectionQuality,
          [],
        ),
        returnValue:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i3.Future<Map<String, dynamic>>);

  @override
  void sendPresenceUpdate(
    String? recipientId,
    bool? isOnline,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #sendPresenceUpdate,
          [
            recipientId,
            isOnline,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void sendTypingIndicator(
    String? recipientId,
    bool? isTyping,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #sendTypingIndicator,
          [
            recipientId,
            isTyping,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.Future<void> sendUserOnlineStatus(bool? isOnline) => (super.noSuchMethod(
        Invocation.method(
          #sendUserOnlineStatus,
          [isOnline],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  void setupContactListeners(List<String>? contactSessionIds) =>
      super.noSuchMethod(
        Invocation.method(
          #setupContactListeners,
          [contactSessionIds],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.Future<bool> testSocketConnection() => (super.noSuchMethod(
        Invocation.method(
          #testSocketConnection,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  void sendSessionDeletionRequest(String? sessionToDelete) =>
      super.noSuchMethod(
        Invocation.method(
          #sendSessionDeletionRequest,
          [sessionToDelete],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addContact(String? contactSessionId) => super.noSuchMethod(
        Invocation.method(
          #addContact,
          [contactSessionId],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeContact(String? contactSessionId) => super.noSuchMethod(
        Invocation.method(
          #removeContact,
          [contactSessionId],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void broadcastPresenceToContacts() => super.noSuchMethod(
        Invocation.method(
          #broadcastPresenceToContacts,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updatePresence(
    bool? isOnline, {
    List<String>? specificUsers,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #updatePresence,
          [isOnline],
          {#specificUsers: specificUsers},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void requestPresenceStatus(List<String>? contactIds) => super.noSuchMethod(
        Invocation.method(
          #requestPresenceStatus,
          [contactIds],
        ),
        returnValueForMissingStub: null,
      );

  @override
  String getMessageStatus(String? messageId) => (super.noSuchMethod(
        Invocation.method(
          #getMessageStatus,
          [messageId],
        ),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.method(
            #getMessageStatus,
            [messageId],
          ),
        ),
      ) as String);

  @override
  Map<String, dynamic>? getTypingStatus(
    String? fromUserId,
    String? recipientId,
  ) =>
      (super.noSuchMethod(Invocation.method(
        #getTypingStatus,
        [
          fromUserId,
          recipientId,
        ],
      )) as Map<String, dynamic>?);
}

/// A class which mocks [SeSessionService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSeSessionService extends _i1.Mock implements _i5.SeSessionService {
  MockSeSessionService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> hasPersistentSession() => (super.noSuchMethod(
        Invocation.method(
          #hasPersistentSession,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<void> reloadSessionFromStorage() => (super.noSuchMethod(
        Invocation.method(
          #reloadSessionFromStorage,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> backupSession() => (super.noSuchMethod(
        Invocation.method(
          #backupSession,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<bool> restoreSessionFromBackup() => (super.noSuchMethod(
        Invocation.method(
          #restoreSessionFromBackup,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<String> decryptPrivateKey(String? encryptedPrivateKey) =>
      (super.noSuchMethod(
        Invocation.method(
          #decryptPrivateKey,
          [encryptedPrivateKey],
        ),
        returnValue: _i3.Future<String>.value(_i4.dummyValue<String>(
          this,
          Invocation.method(
            #decryptPrivateKey,
            [encryptedPrivateKey],
          ),
        )),
      ) as _i3.Future<String>);

  @override
  _i3.Future<Map<String, dynamic>> createSession(String? displayName) =>
      (super.noSuchMethod(
        Invocation.method(
          #createSession,
          [displayName],
        ),
        returnValue:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i3.Future<Map<String, dynamic>>);

  @override
  _i3.Future<_i5.SessionData?> loadSession() => (super.noSuchMethod(
        Invocation.method(
          #loadSession,
          [],
        ),
        returnValue: _i3.Future<_i5.SessionData?>.value(),
      ) as _i3.Future<_i5.SessionData?>);

  @override
  _i3.Future<bool> login(
    String? displayName,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [
            displayName,
            password,
          ],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> userExists(String? displayName) => (super.noSuchMethod(
        Invocation.method(
          #userExists,
          [displayName],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  bool isValidSessionId(String? sessionId) => (super.noSuchMethod(
        Invocation.method(
          #isValidSessionId,
          [sessionId],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i3.Future<bool> isSessionIdUnique(String? sessionId) => (super.noSuchMethod(
        Invocation.method(
          #isSessionIdUnique,
          [sessionId],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  String generateNewSessionId() => (super.noSuchMethod(
        Invocation.method(
          #generateNewSessionId,
          [],
        ),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.method(
            #generateNewSessionId,
            [],
          ),
        ),
      ) as String);

  @override
  List<String> generateTestSessionIds(int? count) => (super.noSuchMethod(
        Invocation.method(
          #generateTestSessionIds,
          [count],
        ),
        returnValue: <String>[],
      ) as List<String>);

  @override
  _i3.Future<bool> isUserLoggedIn() => (super.noSuchMethod(
        Invocation.method(
          #isUserLoggedIn,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> isSessionLoggedIn() => (super.noSuchMethod(
        Invocation.method(
          #isSessionLoggedIn,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> logout() => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<Map<String, dynamic>> validateSessionPersistence() =>
      (super.noSuchMethod(
        Invocation.method(
          #validateSessionPersistence,
          [],
        ),
        returnValue:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i3.Future<Map<String, dynamic>>);

  @override
  _i3.Future<void> deleteSession() => (super.noSuchMethod(
        Invocation.method(
          #deleteSession,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> deleteAccount() => (super.noSuchMethod(
        Invocation.method(
          #deleteAccount,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> deleteAllChats() => (super.noSuchMethod(
        Invocation.method(
          #deleteAllChats,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<String> encryptData(
    String? data,
    String? recipientPublicKey,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #encryptData,
          [
            data,
            recipientPublicKey,
          ],
        ),
        returnValue: _i3.Future<String>.value(_i4.dummyValue<String>(
          this,
          Invocation.method(
            #encryptData,
            [
              data,
              recipientPublicKey,
            ],
          ),
        )),
      ) as _i3.Future<String>);

  @override
  _i3.Future<String> decryptData(
    String? encryptedData,
    String? senderPublicKey,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #decryptData,
          [
            encryptedData,
            senderPublicKey,
          ],
        ),
        returnValue: _i3.Future<String>.value(_i4.dummyValue<String>(
          this,
          Invocation.method(
            #decryptData,
            [
              encryptedData,
              senderPublicKey,
            ],
          ),
        )),
      ) as _i3.Future<String>);

  @override
  _i3.Future<void> storeEncryptedMessage(
    String? sessionId,
    _i5.EncryptedMessage? message,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #storeEncryptedMessage,
          [
            sessionId,
            message,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<List<_i5.EncryptedMessage>> getEncryptedMessages(
          String? sessionId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getEncryptedMessages,
          [sessionId],
        ),
        returnValue: _i3.Future<List<_i5.EncryptedMessage>>.value(
            <_i5.EncryptedMessage>[]),
      ) as _i3.Future<List<_i5.EncryptedMessage>>);

  @override
  _i3.Future<void> clearSessionMessages(String? sessionId) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearSessionMessages,
          [sessionId],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<bool> verifySessionIntegrity() => (super.noSuchMethod(
        Invocation.method(
          #verifySessionIntegrity,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  Map<String, dynamic> getSessionStats() => (super.noSuchMethod(
        Invocation.method(
          #getSessionStats,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  _i3.Future<String> exportSessionData() => (super.noSuchMethod(
        Invocation.method(
          #exportSessionData,
          [],
        ),
        returnValue: _i3.Future<String>.value(_i4.dummyValue<String>(
          this,
          Invocation.method(
            #exportSessionData,
            [],
          ),
        )),
      ) as _i3.Future<String>);

  @override
  _i3.Future<void> importSessionData(String? exportedData) =>
      (super.noSuchMethod(
        Invocation.method(
          #importSessionData,
          [exportedData],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> initializeNotificationServices() => (super.noSuchMethod(
        Invocation.method(
          #initializeNotificationServices,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> registerDeviceToken(String? deviceToken) =>
      (super.noSuchMethod(
        Invocation.method(
          #registerDeviceToken,
          [deviceToken],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> unregisterDeviceToken() => (super.noSuchMethod(
        Invocation.method(
          #unregisterDeviceToken,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<String?> getCurrentUsername() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentUsername,
          [],
        ),
        returnValue: _i3.Future<String?>.value(),
      ) as _i3.Future<String?>);

  @override
  _i3.Future<bool> areNotificationServicesConfigured() => (super.noSuchMethod(
        Invocation.method(
          #areNotificationServicesConfigured,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<void> regenerateProperKeys() => (super.noSuchMethod(
        Invocation.method(
          #regenerateProperKeys,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<String?> getDecryptedPrivateKey() => (super.noSuchMethod(
        Invocation.method(
          #getDecryptedPrivateKey,
          [],
        ),
        returnValue: _i3.Future<String?>.value(),
      ) as _i3.Future<String?>);
}

/// A class which mocks [MessageStorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockMessageStorageService extends _i1.Mock
    implements _i6.MessageStorageService {
  MockMessageStorageService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> saveConversation(_i7.ChatConversation? conversation) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveConversation,
          [conversation],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> saveMessage(_i8.Message? message) => (super.noSuchMethod(
        Invocation.method(
          #saveMessage,
          [message],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<List<_i8.Message>> getMessages(
    String? conversationId, {
    int? limit = 50,
    int? offset = 0,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMessages,
          [conversationId],
          {
            #limit: limit,
            #offset: offset,
          },
        ),
        returnValue: _i3.Future<List<_i8.Message>>.value(<_i8.Message>[]),
      ) as _i3.Future<List<_i8.Message>>);

  @override
  _i3.Future<List<_i7.ChatConversation>> getConversations() =>
      (super.noSuchMethod(
        Invocation.method(
          #getConversations,
          [],
        ),
        returnValue: _i3.Future<List<_i7.ChatConversation>>.value(
            <_i7.ChatConversation>[]),
      ) as _i3.Future<List<_i7.ChatConversation>>);

  @override
  _i3.Future<_i7.ChatConversation?> getConversation(String? conversationId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getConversation,
          [conversationId],
        ),
        returnValue: _i3.Future<_i7.ChatConversation?>.value(),
      ) as _i3.Future<_i7.ChatConversation?>);

  @override
  _i3.Future<List<_i7.ChatConversation>> getUserConversations(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserConversations,
          [userId],
        ),
        returnValue: _i3.Future<List<_i7.ChatConversation>>.value(
            <_i7.ChatConversation>[]),
      ) as _i3.Future<List<_i7.ChatConversation>>);

  @override
  _i3.Future<void> deleteConversation(String? conversationId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteConversation,
          [conversationId],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> deleteAllChats() => (super.noSuchMethod(
        Invocation.method(
          #deleteAllChats,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> forceRecreateDatabase() => (super.noSuchMethod(
        Invocation.method(
          #forceRecreateDatabase,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> updateMessageStatus(
    String? messageId,
    _i8.MessageStatus? status,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateMessageStatus,
          [
            messageId,
            status,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> deleteMessage(String? messageId) => (super.noSuchMethod(
        Invocation.method(
          #deleteMessage,
          [messageId],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
