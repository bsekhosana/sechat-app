// Autogenerated from Pigeon (v13.1.2), do not edit directly.
// See also: https://pub.dev/packages/pigeon

#import <Foundation/Foundation.h>

@protocol FlutterBinaryMessenger;
@protocol FlutterMessageCodec;
@class FlutterError;
@class FlutterStandardTypedData;

NS_ASSUME_NONNULL_BEGIN

@class SessionIdentity;
@class SessionMessage;
@class SessionContact;
@class SessionGroup;
@class SessionAttachment;

@interface SessionIdentity : NSObject
+ (instancetype)makeWithPublicKey:(nullable NSString *)publicKey
    privateKey:(nullable NSString *)privateKey
    sessionId:(nullable NSString *)sessionId
    createdAt:(nullable NSString *)createdAt;
@property(nonatomic, copy, nullable) NSString * publicKey;
@property(nonatomic, copy, nullable) NSString * privateKey;
@property(nonatomic, copy, nullable) NSString * sessionId;
@property(nonatomic, copy, nullable) NSString * createdAt;
@end

@interface SessionMessage : NSObject
+ (instancetype)makeWithId:(nullable NSString *)id
    senderId:(nullable NSString *)senderId
    receiverId:(nullable NSString *)receiverId
    content:(nullable NSString *)content
    messageType:(nullable NSString *)messageType
    timestamp:(nullable NSString *)timestamp
    status:(nullable NSString *)status
    isOutgoing:(nullable NSNumber *)isOutgoing;
@property(nonatomic, copy, nullable) NSString * id;
@property(nonatomic, copy, nullable) NSString * senderId;
@property(nonatomic, copy, nullable) NSString * receiverId;
@property(nonatomic, copy, nullable) NSString * content;
@property(nonatomic, copy, nullable) NSString * messageType;
@property(nonatomic, copy, nullable) NSString * timestamp;
@property(nonatomic, copy, nullable) NSString * status;
@property(nonatomic, strong, nullable) NSNumber * isOutgoing;
@end

@interface SessionContact : NSObject
+ (instancetype)makeWithSessionId:(nullable NSString *)sessionId
    name:(nullable NSString *)name
    profilePicture:(nullable NSString *)profilePicture
    lastSeen:(nullable NSString *)lastSeen
    isOnline:(nullable NSNumber *)isOnline
    isBlocked:(nullable NSNumber *)isBlocked;
@property(nonatomic, copy, nullable) NSString * sessionId;
@property(nonatomic, copy, nullable) NSString * name;
@property(nonatomic, copy, nullable) NSString * profilePicture;
@property(nonatomic, copy, nullable) NSString * lastSeen;
@property(nonatomic, strong, nullable) NSNumber * isOnline;
@property(nonatomic, strong, nullable) NSNumber * isBlocked;
@end

@interface SessionGroup : NSObject
+ (instancetype)makeWithGroupId:(nullable NSString *)groupId
    name:(nullable NSString *)name
    description:(nullable NSString *)description
    avatar:(nullable NSString *)avatar
    members:(nullable NSArray<NSString *> *)members
    adminId:(nullable NSString *)adminId
    createdAt:(nullable NSString *)createdAt;
@property(nonatomic, copy, nullable) NSString * groupId;
@property(nonatomic, copy, nullable) NSString * name;
@property(nonatomic, copy, nullable) NSString * description;
@property(nonatomic, copy, nullable) NSString * avatar;
@property(nonatomic, copy, nullable) NSArray<NSString *> * members;
@property(nonatomic, copy, nullable) NSString * adminId;
@property(nonatomic, copy, nullable) NSString * createdAt;
@end

@interface SessionAttachment : NSObject
+ (instancetype)makeWithId:(nullable NSString *)id
    fileName:(nullable NSString *)fileName
    filePath:(nullable NSString *)filePath
    fileSize:(nullable NSNumber *)fileSize
    mimeType:(nullable NSString *)mimeType
    url:(nullable NSString *)url;
@property(nonatomic, copy, nullable) NSString * id;
@property(nonatomic, copy, nullable) NSString * fileName;
@property(nonatomic, copy, nullable) NSString * filePath;
@property(nonatomic, strong, nullable) NSNumber * fileSize;
@property(nonatomic, copy, nullable) NSString * mimeType;
@property(nonatomic, copy, nullable) NSString * url;
@end

/// The codec used by SessionApiHandler.
NSObject<FlutterMessageCodec> *SessionApiHandlerGetCodec(void);

@protocol SessionApiHandler
- (void)generateEd25519KeyPairWithCompletion:(void (^)(NSDictionary<NSString *, NSString *> *_Nullable, FlutterError *_Nullable))completion;
- (void)initializeSessionIdentity:(SessionIdentity *)identity completion:(void (^)(FlutterError *_Nullable))completion;
- (void)connectWithCompletion:(void (^)(FlutterError *_Nullable))completion;
- (void)disconnectWithCompletion:(void (^)(FlutterError *_Nullable))completion;
- (void)sendMessageMessage:(SessionMessage *)message completion:(void (^)(FlutterError *_Nullable))completion;
- (void)sendTypingIndicatorSessionId:(NSString *)sessionId isTyping:(BOOL)isTyping completion:(void (^)(FlutterError *_Nullable))completion;
- (void)addContactContact:(SessionContact *)contact completion:(void (^)(FlutterError *_Nullable))completion;
- (void)removeContactSessionId:(NSString *)sessionId completion:(void (^)(FlutterError *_Nullable))completion;
- (void)updateContactContact:(SessionContact *)contact completion:(void (^)(FlutterError *_Nullable))completion;
- (void)createGroupGroup:(SessionGroup *)group completion:(void (^)(NSString *_Nullable, FlutterError *_Nullable))completion;
- (void)addMemberToGroupGroupId:(NSString *)groupId memberId:(NSString *)memberId completion:(void (^)(FlutterError *_Nullable))completion;
- (void)removeMemberFromGroupGroupId:(NSString *)groupId memberId:(NSString *)memberId completion:(void (^)(FlutterError *_Nullable))completion;
- (void)leaveGroupGroupId:(NSString *)groupId completion:(void (^)(FlutterError *_Nullable))completion;
- (void)uploadAttachmentAttachment:(SessionAttachment *)attachment completion:(void (^)(NSString *_Nullable, FlutterError *_Nullable))completion;
- (void)downloadAttachmentAttachmentId:(NSString *)attachmentId completion:(void (^)(SessionAttachment *_Nullable, FlutterError *_Nullable))completion;
- (void)encryptMessageMessage:(NSString *)message recipientId:(NSString *)recipientId completion:(void (^)(NSString *_Nullable, FlutterError *_Nullable))completion;
- (void)decryptMessageEncryptedMessage:(NSString *)encryptedMessage senderId:(NSString *)senderId completion:(void (^)(NSString *_Nullable, FlutterError *_Nullable))completion;
- (void)configureOnionRoutingEnabled:(BOOL)enabled proxyUrl:(nullable NSString *)proxyUrl completion:(void (^)(FlutterError *_Nullable))completion;
- (void)saveToStorageKey:(NSString *)key value:(NSString *)value completion:(void (^)(FlutterError *_Nullable))completion;
- (void)loadFromStorageKey:(NSString *)key completion:(void (^)(NSString *_Nullable, FlutterError *_Nullable))completion;
- (void)generateSessionIdPublicKey:(NSString *)publicKey completion:(void (^)(NSString *_Nullable, FlutterError *_Nullable))completion;
- (void)validateSessionIdSessionId:(NSString *)sessionId completion:(void (^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
@end

extern void SetUpSessionApiHandler(id<FlutterBinaryMessenger> binaryMessenger, NSObject<SessionApiHandler> *_Nullable api);

/// The codec used by SessionCallbackApi.
NSObject<FlutterMessageCodec> *SessionCallbackApiGetCodec(void);

@interface SessionCallbackApi : NSObject
- (instancetype)initWithBinaryMessenger:(id<FlutterBinaryMessenger>)binaryMessenger;
- (void)onMessageReceivedMessage:(SessionMessage *)message completion:(void (^)(FlutterError *_Nullable))completion;
- (void)onContactAddedContact:(SessionContact *)contact completion:(void (^)(FlutterError *_Nullable))completion;
- (void)onContactUpdatedContact:(SessionContact *)contact completion:(void (^)(FlutterError *_Nullable))completion;
- (void)onContactRemovedSessionId:(NSString *)sessionId completion:(void (^)(FlutterError *_Nullable))completion;
- (void)onTypingReceivedSessionId:(NSString *)sessionId completion:(void (^)(FlutterError *_Nullable))completion;
- (void)onTypingStoppedSessionId:(NSString *)sessionId completion:(void (^)(FlutterError *_Nullable))completion;
- (void)onMessageStatusUpdatedMessageId:(NSString *)messageId completion:(void (^)(FlutterError *_Nullable))completion;
- (void)onConnectedWithCompletion:(void (^)(FlutterError *_Nullable))completion;
- (void)onDisconnectedWithCompletion:(void (^)(FlutterError *_Nullable))completion;
- (void)onErrorError:(NSString *)error completion:(void (^)(FlutterError *_Nullable))completion;
- (void)onGroupCreatedGroupId:(NSString *)groupId completion:(void (^)(FlutterError *_Nullable))completion;
- (void)onGroupUpdatedGroup:(SessionGroup *)group completion:(void (^)(FlutterError *_Nullable))completion;
- (void)onGroupDeletedGroupId:(NSString *)groupId completion:(void (^)(FlutterError *_Nullable))completion;
- (void)onMemberAddedGroupId:(NSString *)groupId memberId:(NSString *)memberId completion:(void (^)(FlutterError *_Nullable))completion;
- (void)onMemberRemovedGroupId:(NSString *)groupId memberId:(NSString *)memberId completion:(void (^)(FlutterError *_Nullable))completion;
- (void)onAttachmentUploadedAttachment:(SessionAttachment *)attachment completion:(void (^)(FlutterError *_Nullable))completion;
- (void)onAttachmentDownloadedAttachment:(SessionAttachment *)attachment completion:(void (^)(FlutterError *_Nullable))completion;
@end

NS_ASSUME_NONNULL_END
